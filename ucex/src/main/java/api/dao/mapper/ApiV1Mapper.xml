<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="api.dao.ApiV1Dao">

	<select id="getUserCount" resultType="int">
		SELECT count(*)
		FROM
		uc_user
	</select>

	<!-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■  내선정보 조회  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ -->		
	<resultMap id="getExtensionInfoResult" type="api.domain.ExtensionData">
		<result property="term_type" column="term_type" />
		<result property="number_type" column="number_type" />
		<result property="ip" column="ip" />
		<result property="mac" column="mac" />
		<result property="user_id" column="user_id" />
		<result property="outgoing_cid" column="outgoing_cid" />
		<result property="auth_id" column="auth_id" />
		<result property="auth_password" column="auth_password" />
		<result property="scti_usage" column="scti_usage" />
	</resultMap>
	
	<select id="getExtensionInfo" parameterType="api.domain.NumberTenant" resultMap="getExtensionInfoResult">
		SELECT 
			conv(concat(device_model , lpad(device_submodel,2,0)), 16, 10) as term_type,
			extension_type as number_type,
			device_ip as ip,
			device_mac as mac,
			cm_user_id as user_id,
			outgoing_cid,
			sip_id as auth_id,
			sip_pass as auth_password,
			extension_cti as scti_usage
		FROM
    		uc_extension
		WHERE
			extension_id = concat( media_tenant_prefix, #{number})
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
		limit 1
	</select>
	
	<!-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■  MADN 정보 조회  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ -->		
	<resultMap id="getMadnInfoResult" type="api.domain.MadnCommand">
		<result property="cm" column="cm" />
		<result property="tenant" column="tenant" />
		<result property="madn" column="madn" />
	</resultMap>
	
	<select id="getMadnInfo" parameterType="api.domain.MadnCommand" resultMap="getMadnInfoResult">
		SELECT 
			(select cs_preconfig_id from uc_call_server where cs_id=x.cs_id limit 1 ) as cm,
			x.media_tenant as tenant,
			x.extension_id as madn
		FROM
    		uc_extension x
		WHERE
			extension_id = concat( media_tenant_prefix, #{madn})
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
		limit 1
	</select>

	<!-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■  Tenant 정보 조회  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ -->		
	<resultMap id="getTenantInfoResult" type="api.domain.Tenant">
		<result property="cm" column="cm" />
		<result property="tenant" column="tenant" />
		<result property="tenant_prefix" column="tenant_prefix" />
		<result property="trunk_access_code" column="trunk_access_code" />
		<result property="company_name" column="company_name" />
		<result property="companynumber" column="companynumber" />
		<result property="companyfaxnumber" column="companyfaxnumber" />
	</resultMap>

	<select id="getTenantPrefix" parameterType="hashmap" resultType="string">
		SELECT 
			cs_tenant_prefix
		FROM
    		uc_cs_tenant
		WHERE
			tenant_id = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
		limit 1
	</select>
	
	<select id="getTenantInfo" parameterType="api.domain.Tenant" resultMap="getTenantInfoResult">
		SELECT
			(select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 ) as cm, 
			cs_tenant as tenant,
			cs_tenant_prefix as tenant_prefix,
			cs_trunk_code as trunk_access_code,
			tenant_name as company_name,
			tenant_fax as companyfaxnumber,
			tenant_tel as companynumber
		from uc_cs_tenant ct, uc_tenant t
		where t.tenant_id = ct.tenant_id			
			and t.tenant_id = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
		limit 1
	</select>
	
	<insert id="createTenant" parameterType="api.domain.Tenant">
		INSERT INTO uc_tenant (
				tenant_id,
				tenant_name,
				tenant_tel,
				tenant_fax,
				tenant_desc
			) VALUES (
				concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
				#{company_name},
				#{companynumber},
				#{companyfaxnumber},
				#{company_name}
			)
	</insert>
		
	<insert id="createCsTenant" parameterType="api.domain.Tenant">
		INSERT INTO uc_cs_tenant (
				idx,
				cs_id,
				cs_tenant,
				cs_tenant_prefix,
				cs_trunk_code,
				cs_tenant_desc,
				tenant_id
			) VALUES (
				concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
				(select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 ),
				#{tenant},
				#{tenant_prefix},
				#{trunk_access_code},
				#{company_name},
				concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
			)			
	</insert>
	
	<insert id="createTenantAdmin" parameterType="api.domain.Tenant">
		INSERT INTO uc_user	(
			USER_ID,
			ORGANIZER_ID,
			USER_PASSWORD,
			COMPANY_NAME,
			USER_EMAIL,
			USER_NAME,
			USER_NICK,
			USER_POSITION,
			USER_CLASS,
			MODIFICATION_DATE,
			MEDIA_TENANT
		) VALUES (
			concat('admin.', #{cm}, '.',#{tenant} ),
			'admin',
			fnc_user_pwd_shadow('admin1234'),
			fnc_user_pwd_shadow(#{company_name}),
			'',
			fnc_user_pwd_shadow('관리자'),
			'',
			'',
			'',
			SYSDATE(),
			concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
		)
	</insert>
	
	<insert id="createTenantOrg" parameterType="api.domain.Tenant">
		INSERT INTO uc_organizer
		(
			organizer_id,
			organizer_name,
			organizer_type,
			organizer_enable,
			organizer_parent_id,
			modification_date	, 
			media_tenant	
		)
		VALUES
		(
		    0,
		    fnc_user_pwd_shadow(#{company_name}),
			1,
			1,
			'-1',
			DATE_FORMAT( SYSDATE(), '%Y-%m-%d'), 
			concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
		)
	</insert>
	
	<update id="modifyTenant" parameterType="api.domain.Tenant">
		update uc_cs_tenant ct, uc_tenant t
		set
			cs_tenant_prefix = #{tenant_prefix},
			cs_trunk_code = #{trunk_access_code},
			tenant_name = #{company_name},
		    tenant_desc = #{company_name},
			tenant_tel = #{companynumber},
			tenant_fax = #{companyfaxnumber}
		where t.tenant_id = ct.tenant_id
			and t.tenant_id = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>
	
	<update id="modifyTenantUser" parameterType="api.domain.Tenant">
		UPDATE uc_user set
				company_name = fnc_user_pwd_shadow(#{company_name})
			where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>

	<select id="getTenantUsers" parameterType="api.domain.Tenant" resultType="string">
	    	SELECT user_id from uc_user
        		where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
    </select>

	<update id="deleteTenant" parameterType="hashmap">    	
		DELETE FROM uc_tenant
			where tenant_id = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>
	
	<update id="deleteCsTenant" parameterType="hashmap">    	
		DELETE FROM uc_cs_tenant
			where tenant_id = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>
	
	<update id="deleteTenantAdmin" parameterType="hashmap">
		DELETE from uc_user
		where MEDIA_TENANT=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update> 
	
	<update id="deleteTenantOrg" parameterType="hashmap">
		DELETE from uc_organizer
		where MEDIA_TENANT=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update> 
	
	<insert id="logHistoryTable" parameterType="hashmap">	
		INSERT INTO uc_history
		(
			history_table, 
			history_key, 
			history_type
		)
		VALUES
		(
			#{history_table},
			#{key},
			#{type}
		)
	</insert>
	

	<insert id="createUser" parameterType="api.domain.UserInfo">
		INSERT INTO uc_user (
				USER_ID,
				MEDIA_ID,
				MEDIA_TENANT,
				ORGANIZER_ID,		
				USER_PASSWORD,
				USER_EMAIL,
				USER_NAME,
				USER_NICK,
				MODIFICATION_DATE,
				USER_DESCRIPTION,
				SORT_ORDER,
				COMPANY_NAME,
				AUTO_SYNC,
				USER_CALL_MODE,
				CTI_LICENSE,
				USER_CODE_ID
			) VALUES (
				#{userid},
				#{cm},
				concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
				(select organizer_id from uc_organizer where organizer_option=#{organization} and media_tenant=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
				fnc_user_pwd_shadow(#{password}),
				fnc_user_pwd_shadow(#{emailaddress}),
				fnc_user_pwd_shadow(#{name}),
				#{userid},
				now(),
				'',
				'',
				(select fnc_user_pwd_shadow(tenant_name) from uc_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
				'Y',
				<choose>
					<when test="mode=='CTI'">
						'C',
						'Y',
<!-- CTI 사용자에게는 CTI 라이선스만 할당한다.-->
						(select license_code from uc_license_unit where license_name like 'cti%' limit 1)
					</when>
					<when test="mode=='ALL'">
						'C',
						'Y',
						(select license_code from uc_license_unit where license_name like 'multi%' limit 1)
					</when>
					<otherwise>
						'S',
						'N',
						(select license_code from uc_license_unit where license_name like 'multi%' limit 1)
					</otherwise>
				</choose>
<!-- CTI 사용자에게는 CTI 라이선스만 할당한다.-->
<!-- 				(select license_code from uc_license_unit where license_name like 'multi%' limit 1) -->
				
			)
	</insert>
	
	<insert id="createUserOption" parameterType="api.domain.UserInfo">
		INSERT INTO uc_user_option (
				USER_ID,
				MEDIA_TENANT,
				ORGANIZER_ID,		
				OFFICE_PHONE,
				MOBILE_PHONE,
				USER_NAME,			
		        OFFICE_ADDRESS,                
		        OFFICE_FAX,
				MODIFICATION_DATE
			) VALUES (
				#{userid},
				concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
				(select organizer_id from uc_organizer where organizer_option=#{organization} and media_tenant=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1 ),
				'',
				fnc_user_pwd_shadow(#{mobilenumber}),
				fnc_user_pwd_shadow(#{name}),				
				fnc_user_pwd_shadow(#{organization}),
				(select fnc_user_pwd_shadow(tenant_fax) from uc_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
				now()
			)
	</insert>
	
	<select id="getUserInfoCount" parameterType="api.domain.UserInfo" resultType="int">
		SELECT count(*) from uc_user
		WHERE USER_ID=#{userid} and media_tenant=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</select>
	
	<update id="modifyUser" parameterType="api.domain.UserInfo">
		<selectKey resultType="string" keyProperty="organizer_id" order="BEFORE">
        	select organizer_id 
        		from uc_organizer 
        		where organizer_option = #{organization}
    	</selectKey>
		UPDATE uc_user SET	
				<if test="organization != null">
					ORGANIZER_ID = #{organizer_id},
				</if>
				<if test="password != null">
					USER_PASSWORD = fnc_user_pwd_shadow(#{password}),
				</if>
				<if test="emailaddress != null">
					USER_EMAIL = fnc_user_pwd_shadow(#{emailaddress}),
				</if>
				<if test="name != null">
					USER_NAME = fnc_user_pwd_shadow(#{name}),
				</if>
				<if test="userid != null">
					USER_NICK = #{userid},
				</if>
				<if test="userid != null">
					SORT_ORDER = '',
				</if>
				<if test="mode != null"> 
								<choose>
									<when test="mode=='CTI'">
										USER_CALL_MODE = 'C',
										CTI_LICENSE = 'Y', 
										USER_CODE_ID = (select license_code from uc_license_unit where license_name like 'cti%' limit 1),
									</when>
									<when test="mode=='ALL'">
										USER_CALL_MODE = 'C',
										CTI_LICENSE = 'Y', 
										USER_CODE_ID = (select license_code from uc_license_unit where license_name like 'multi%' limit 1),
									</when>
									<otherwise>
										USER_CALL_MODE = 'S',
										CTI_LICENSE = 'N', 
										USER_CODE_ID = (select license_code from uc_license_unit where license_name like 'multi%' limit 1),
									</otherwise>
								</choose>
				</if>

				COMPANY_NAME = (select fnc_user_pwd_shadow(tenant_name) from uc_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
				MODIFICATION_DATE = now()
				
		WHERE USER_ID = #{userid} and MEDIA_TENANT = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>
	
	<update id="modifyUserOption" parameterType="api.domain.UserInfo">
		<selectKey resultType="string" keyProperty="organizer_id" order="BEFORE">
        	select organizer_id 
        		from uc_organizer 
        		where organizer_option = #{organization}
    	</selectKey>
		UPDATE uc_user_option SET
			<if test="organization != null">
				ORGANIZER_ID = #{organizer_id},
				</if>
			<if test="mobilenumber != null">
				MOBILE_PHONE	=	fnc_user_pwd_shadow(#{mobilenumber}),
			</if>
			<if test="name != null">
				USER_NAME		=	fnc_user_pwd_shadow(#{name}),
			</if>
				OFFICE_ADDRESS	=	fnc_user_pwd_shadow(#{organization}),
				OFFICE_FAX		=	(select fnc_user_pwd_shadow(tenant_fax) from uc_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
				MODIFICATION_DATE	=	now()
		WHERE USER_ID = #{userid} and MEDIA_TENANT = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</update>
	
	<delete id="deleteUser" parameterType="api.domain.BusinessObject">
		DELETE FROM uc_user
		WHERE user_id=#{userid} and media_tenant=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</delete>
	
	<delete id="deleteUserOption" parameterType="api.domain.BusinessObject">
		DELETE FROM uc_user_option
		WHERE user_id=#{userid} and media_tenant=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') )
	</delete>
	
	<update id="addUserExtension" parameterType="hashmap">
		UPDATE uc_extension SET
			user_id = #{userid},
			user_organizer_id=(select organizer_id from uc_user where user_id=#{userid}),
			cti_mode = (select if(user_call_mode='C', '1', null) from cmuc.uc_user where user_id=#{userid})
		WHERE extension_id = concat( media_tenant_prefix, #{extension_id})
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
	</update>
	
	<update id="deleteUserExtension" parameterType="hashmap">
		UPDATE uc_extension SET
			user_id = null,
			user_organizer_id=null,
			cti_mode=null
		WHERE extension_id = concat( media_tenant_prefix, #{extension_id})
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
	</update>
	

<!-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■  TEST TEST TEST  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ -->
	<delete id="deleteMemberMADN" parameterType="hashmap">
		delete from uc_extension_madn
		WHERE madn=#{madn} and sadn=#{sadn}
	</delete>
	
	<insert id="addMemberMADN" parameterType="hashmap">
		insert into uc_extension_madn (madn, sadn) values (#{madn}, #{sadn})
	</insert>
	
	<delete id="deleteMADN" parameterType="hashmap">
		delete from uc_extension
		where extension_id=#{madn}
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
	</delete>
	
	<insert id="createMADN" parameterType="hashmap">
		insert into uc_extension (
			extension_id,
			media_id,
			media_tenant,
			device_model,
			device_submodel,
			extension_type,
			device_ip,
			device_mac,
			extension_cti,
			extension_cause
		) values (
			#{madn},
			(select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 ),
			#{tenant},
			'0',
			'0',
			2,
			'0.0.0.0',
			'00:00:00:00:00:00',
			0,
			1
		)
	</insert>
	
	<delete id="deleteExtension" parameterType="hashmap">
		delete from uc_extension
		where extension_id = #{extension}
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
	</delete>
	
	<update id="modifyExtension" parameterType="api.domain.ExtensionData">
		update uc_extension set
			device_model =  substr(conv(#{term_type},10,16),1,1),
			device_submodel = lower(conv(substr(conv(#{term_type},10,16),2,2),16,16)),
			extension_type= #{number_type},
			device_ip = #{ip},
			device_mac = #{mac},
			cm_user_id = #{user_id},
			outgoing_cid = #{outgoing_cid},
			sip_id=#{auth_id},
			sip_pass=#{auth_password},
			extension_cti=#{scti_usage},
			media_tenant_prefix=(select cs_tenant_prefix from uc_cs_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1)
		where extension_id = #{dn}
			and media_tenant = #{tenant} and cs_id = (select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 )
	</update>
	
	<insert id="createExtension" parameterType="api.domain.ExtensionData">
		insert into uc_extension (
			extension_id,
			media_id,
			media_tenant,
			device_model,
			device_submodel,
			extension_type,
			device_ip,
			device_mac,
			extension_cti,
			extension_cause,
			media_tenant_prefix,
			outgoing_cid
		) values (
			#{dn},
			(select cs_id from uc_call_server where cs_preconfig_id=#{cm} limit 1 ),
			#{tenant},
			substr(conv(#{term_type},10,16),1,1),
			lower(conv(substr(conv(#{term_type},10,16),2,2),16,16)),
			#{number_type},
			#{ip},
			#{mac},
			#{scti_usage},
			1,
			(select cs_tenant_prefix from uc_cs_tenant where tenant_id=concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) limit 1),
			#{outgoing_cid}
		)
	</insert>


	<resultMap id="getSiteInfoResult" type="api.domain.Site">
		<result property="cm" column="cm" />
		<result property="tenant" column="tenant" />
		<result property="site" column="site" />
		<result property="sitename" column="sitename" />
		<result property="companyaddress" column="companyaddress" />
	</resultMap>
		
		<select id="getSiteInfo" parameterType="api.domain.Site" resultMap="getSiteInfoResult">
		SELECT 
			media_id as cm,
			media_tenant as tenant,
			organizer_option as site,
			fnc_decrypt_shadow(organizer_name) as sitename,
			organizer_description as companyaddress
		FROM
    		uc_organizer
		WHERE
			media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and organizer_option = #{site}
		limit 1
	</select>
	
	<insert id="createSite" parameterType="api.domain.Site">
		<selectKey resultType="string" keyProperty="site_idx" order="BEFORE">
        	select max(cast(organizer_id as unsigned))+1 from uc_organizer
    	</selectKey>        
    	
		INSERT INTO uc_organizer
		(
			organizer_id,
			organizer_name,
			organizer_type,
			organizer_enable,
			organizer_parent_id,
			organizer_option,
			organizer_description,
			level_id,
			modification_date	, 
			user_code_id,
			media_tenant,
			media_id	
		)
		VALUES
		(
		    #{site_idx},
		    fnc_user_pwd_shadow(#{sitename}),		
			100,
			1,
			'0',
			#{site},
			#{companyaddress},
			null,
			DATE_FORMAT( SYSDATE(), '%Y-%m-%d'), 
			null,
			concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
			#{cm}
		)
	</insert>
	
	<update id="modifySite" parameterType="api.domain.Site">
		UPDATE uc_organizer  set
				organizer_name = fnc_user_pwd_shadow(#{sitename}),
				organizer_option = #{site},
				organizer_description = #{companyaddress}
			where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and organizer_option = #{site}
		
		<selectKey resultType="string" keyProperty="site_idx" order="AFTER">
        	SELECT organizer_id from uc_organizer
        		where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and organizer_option = #{site}
    	</selectKey> 
	</update>
	
	<update id="deleteSite" parameterType="api.domain.Site">
		<selectKey resultType="string" keyProperty="site_idx" order="BEFORE">
        	select organizer_id from uc_organizer
        		where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and organizer_option = #{site}
    	</selectKey>
    	
		DELETE FROM uc_organizer
			where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and organizer_option = #{site}
			
	</update>

	<resultMap id="getAddressBookInfoResult" type="api.domain.AddressBook">
		<result property="cm" column="cm" />
		<result property="tenant" column="tenant" />
		<result property="id" column="id" />
		<result property="company" column="company" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="department" column="department" />
		<result property="mobile" column="mobile" />
		<result property="officephone" column="officephone" />
	</resultMap>
		
	<select id="getAddressBookInfo" parameterType="api.domain.AddressBook" resultMap="getAddressBookInfoResult">
		SELECT 
			media_id as cm,
			media_tenant as tenant,
			addr_id as id,
			fnc_decrypt_shadow(company_name) as company,
			fnc_decrypt_shadow(name) as name,
			fnc_decrypt_shadow(email) as name,
			fnc_decrypt_shadow(organization_name) as department,
			fnc_decrypt_shadow(mobile_phone_number) as mobile,
			fnc_decrypt_shadow(office_phone_number) as officephone
		FROM
    		uc_public_addrbook
		WHERE
			media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and addr_id = #{id}
		limit 1
	</select>
	
	<insert id="createAddressBook" parameterType="api.domain.AddressBook">
		INSERT INTO uc_public_addrbook
		(
			media_id,
			media_tenant,
			addr_id,
			company_name,
			name,
			email,
			organization_name,
			mobile_phone_number,
			office_phone_number,
			creation_date,
			modification_date,
			creator_id,
			creator_organizer_id
		)
		VALUES
		(
		    #{cm},
			concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ),
			#{id},
			fnc_user_pwd_shadow(#{company}),
			fnc_user_pwd_shadow(#{name}),
			fnc_user_pwd_shadow(#{email}),
			fnc_user_pwd_shadow(#{department}),
			fnc_user_pwd_shadow(#{mobile}),
			fnc_user_pwd_shadow(#{officephone}),
			now(),
			now(),
			'EMS',
			'EMS'
		)
	</insert>
	
	<update id="modifyAddressBook" parameterType="api.domain.AddressBook">
		UPDATE uc_public_addrbook  set
			company_name = fnc_user_pwd_shadow(#{company}),
			name = fnc_user_pwd_shadow(#{name}),
			email = fnc_user_pwd_shadow(#{email}),
			organization_name = fnc_user_pwd_shadow(#{department}),
			mobile_phone_number = fnc_user_pwd_shadow(#{mobile}),
			office_phone_number = fnc_user_pwd_shadow(#{officephone}),
			modification_date = now()
		where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and addr_id = #{id}
	</update>
	
	<update id="deleteAddressBook" parameterType="api.domain.AddressBook">
		DELETE FROM uc_public_addrbook
			where media_tenant = concat('1', lpad(#{cm}, 3, '0'), lpad(#{tenant}, 4, '0') ) and addr_id = #{id}
	</update>
	
	<select id="convertUCEMedia" parameterType="string" resultType="string">
		SELECT cs_id FROM uc_call_server
		where cs_preconfig_id=#{cm} limit 1
	</select>

	<delete id="deleteUserRelation" parameterType="hashmap">
	   DELETE FROM uc_user_relation
	   WHERE user_id = replace(#{userid}, '@', '\\40') OR target_user_id = replace(#{userid}, '@', '\\40') 		
	</delete>
	
	<update id="updateUserDelteExtension" parameterType="hashmap">
		update cmuc.uc_extension
		set user_id = null, 	
		    user_organizer_id = null  
		where user_id = replace(#{userid}, '@', '\\40')
	</update>
	
	 <update id="procedureRetiredUser" statementType="CALLABLE" parameterType="hashmap">
		{ call cmuc.prc_retired_user(#{userid}, #{etc}) }
	 </update>
	 
</mapper>
